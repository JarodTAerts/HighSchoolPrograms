REM Falling Balls
REM Jarod Aerts
REM 01-22-17

REM OPEN SENSORS AND GET THINGS READY

SENSORS.OPEN 1 % OPENS THE X-AXIS GYROSCOPIC SENSOR FOR INPUT

GR.OPEN 255,0,0,0
GR.ORIENTATION 1
! OPENS THE GRAPHICS SCREEN WITH A BLACK BACKGROUND AND SETS ORINITATION TO PORTRAIT

! SET THE SCALE VARIABLES
GR.SCREEN W,H
HALFW=W/2
HALFH=H/2
QUARTERW=W/4
QUARTERH=H/4
EIGHTW=W/8
EIGHTH=H/8


! DIM THE ARRAYS FOR GRAPHICS OBJECTS
DIM MAINMENU[4]
DIM LEVELMENU[8]
DIM NORMALMENU[6]
DIM MIDDLEMENU[6]
DIM BLOCKMENU[6]
DIM PROGRESSMENU[6]
DIM PAUSEMENU[6]
DIM DIEDMENU[9]
DIM BLOCK[3]

! SET THE OTHER VARIABLES
PLAYERX=0
PLAYERY=H-EIGHTH
DIM ENEMYX[2]
ENEMYX[1]=QUARTERW
ENEMYX[2]=HALFW+QUARTERW
ENEMYY=H+1
BLOCKX=EIGHTW
BLOCKY=-HALFH
D=0
SCORE=0
HIGHSCORE=0
UPDOWN=0
BLOCKM=0

DIM MENURECT[4,4]
MENURECT[1,1]=0
MENURECT[1,2]=H/9
MENURECT[1,3]=W
MENURECT[1,4]=2*(H/9)
MENURECT[2,1]=0
MENURECT[2,2]=3*(H/9)
MENURECT[2,3]=W
MENURECT[2,4]=4*(H/9)
MENURECT[3,1]=0
MENURECT[3,2]=5*(H/9)
MENURECT[3,3]=W
MENURECT[3,4]=6*(H/9)
MENURECT[4,1]=0
MENURECT[4,2]=7*(H/9)
MENURECT[4,3]=W
MENURECT[4,4]=8*(H/9)

BLOCKSPEED=EIGHTH/15
PLAYERSPEED=EIGHTW/2
DIM SPEED[5]
SPEED[1]=EIGHTH/8
SPEED[2]=EIGHTH/7
SPEED[3]=EIGHTH/6
SPEED[4]=EIGHT/5
SPEED[5]=EIGHTH/4

! MAKE THE GRAPHIC OBJECTS

! PLAYER
GR.COLOR 255,255,0,0,1
GR.CIRCLE PLAYER, PLAYERX, PLAYERY, (QUARTERW-EIGHTW/2)
GR.HIDE PLAYER

! ENEMY
GR.COLOR 255,0,0,255,1
GR.CIRCLE ENEMY, ENEMYX[1], ENEMYY, EIGHTW
GR.CIRCLE ENEMYC, ENEMYX[1], ENEMYY, (EIGHTW-EIGHTW/1.5)
GR.HIDE ENEMYC
GR.HIDE ENEMY

! SCORE TEXT
GR.COLOR 255,255,255,255,1
GR.TEXT.SIZE EW
GR.TEXT. ALIGN 2
GR.TEXT.DRAW SCORETEXT, HALFW,EIGHTH, "SCORE:"+FORMAT$("#######",SCORE)
GR.HIDE SCORETEXT 

! BLOCK
GR.COLOR 255,255,255,255,1
GR.RECT BLOCK, BLOCKX, BLOCKY, (BLOCKX+3*QUARTERW), BLOCKY+QUARTERH
GR.HIDE BLOCK

! MAIN MENU
GR.COLOR 255,255,0,0,1
GR.RECT MAINMENU[1], MENURECT[1,1],MENURECT[1,2],MENURECT[1,3],MENURECT[1,4]
GR.COLOR 255,0,0,255,1
GR.RECT MAINMENU[2], MENURECT[2,1],MENURECT[2,2],MENURECT[2,3],MENURECT[2,4]
GR.COLOR 255,255,255,255,1
GR.TEXT.SIZE EIGHTW
GR.TEXT.ALIGN 2
GR.TEXT.DRAW MAINMENU[3], HALFW, MENURECT[1,2]+H/17, "PLAY"
GR.TEXT.DRAW MAINMENU[4], HALFW, MENURECT[2,2]+H/17, "EXIT"

FOR I=1 TO 4
	GR.HIDE MAINMENU[I]
NEXT I

! LEVEL MENU
GR.COLOR 255,255,0,0,1
GR.RECT LEVELMENU[1], MENURECT[1,1],MENURECT[1,2],MENURECT[1,3],MENURECT[1,4]
GR.COLOR 255,0,0,255,1
GR.RECT LEVELMENU[2], MENURECT[2,1],MENURECT[2,2],MENURECT[2,3],MENURECT[2,4]
GR.COLOR 255,0,255,0,1
GR.RECT LEVELMENU[3], MENURECT[3,1],MENURECT[3,2],MENURECT[3,3],MENURECT[3,4]
GR.COLOR 255,255,0,255,1
GR.RECT LEVELMENU[4], MENURECT[4,1],MENURECT[4,2],MENURECT[4,3],MENURECT[4,4]
GR.TEXT 255,255,255,255,1
GR.TEXT.DRAW LEVELMENU[5], HALFW, MENURECT[1,2]+H/17, "NORMAL MODE"
GR.TEXT.DRAW LEVELMENU[6], HALFW, MENURECT[2,2]+H/17, "MIDDLE MODE"
GR.TEXT.DRAW LEVELMENU[7], HALFW, MENURECT[3,2]+H/17, "BLOCK MODE"
GR.TEXT.DRAW LEVELMENU[8], HALFW, MENURECT[4,2]+H/17, "PROGRESSIVE"

FOR I=1 TO 8
	GR.HIDE LEVELMENU[I]
NEXT I

! PAUSE MENU
GR.COLOR 255,255,0,0,1
GR.RECT PAUSEMENU[1], MENURECT[1,1],MENURECT[1,2],MENURECT[1,3],MENURECT[1,4]
GR.COLOR 255,0,0,255,1
GR.RECT PAUSEMENU[2], MENURECT[2,1],MENURECT[2,2],MENURECT[2,3],MENURECT[2,4]
GR.COLOR 255,0,255,0,1
GR.RECT PAUSEMENU[3], MENURECT[3,1],MENURECT[3,2],MENURECT[3,3],MENURECT[3,4]
GR.COLOR 255,255,255,255,1
GR.TEXT.DRAW PAUSEMENU[4], HALFW, MENURECT[1,2]+H/17, "RESUME"
GR.TEXT.DRAW PAUSEMENU[5], HALFW, MENURECT[2,2]+H/17, "MAIN MENU"
GR.TEXT.DRAW PAUSEMENU[6], HALFW, MENURECT[3,2]+H/17, "EXIT"

FOR I=1 TO 6
	GR.HIDE PAUSEMENU[I]
NEXT I

! DIED MENU
GR.COLOR 255,255,0,0,1
GR.RECT DIEDMENU[1], MENURECT[1,1],MENURECT[1,2],MENURECT[1,3],MENURECT[1,4]
GR.COLOR 255,0,0,255,1
GR.RECT DIEDMENU[2], MENURECT[2,1],MENURECT[2,2],MENURECT[2,3],MENURECT[2,4]
GR.COLOR 255,0,255,0,1
GR.RECT DIEDMENU[3], MENURECT[3,1],MENURECT[3,2],MENURECT[3,3],MENURECT[3,4]
GR.COLOR 255,255,0,255,1
GR.RECT DIEDMENU[4], MENURECT[4,1],MENURECT[4,2],MENURECT[4,3],MENURECT[4,4]
GR.TEXT 255,255,255,255,1
GR.TEXT.DRAW DIEDMENU[5], HALFW, MENURECT[1,2]+H/17, "RESTART"
GR.TEXT.DRAW DIEDMENU[6], HALFW, MENURECT[2,2]+H/17, "MAIN MENU"
GR.TEXT.DRAW DIEDMENU[7], HALFW, MENURECT[3,2]+H/17, "EXIT"
GR.TEXT.DRAW DIEDMENU[8], HALFW, MENURECT[4,2]+H/17, "SCORE:"+FORMAT$("#######",SCORE)
GR.TEXT.DRAW DIEDMENU[9], HALFW, H-H/17, "HIGHSCORE:"+FORMAT$("#####", HIGHSCORE)

FOR I=1 TO 9
	GR.HIDE DIEDMENU[I]
NEXT I

REM -CHECK TO SEE IF FILES EXIST AND CREATE THEM IF THEY DO NOT-
FILE.EXISTS FILE, "NORMALHS.FB"
IF FILE=0 THEN
	TEXT.OPEN W, F, "NORMALHS.FB"
	TEXT.WRITELN F, 0
	TEXT.CLOSE F
END IF
FILE.EXISTS FILE, "MIDDLEHS.FB"
IF FILE=0 THEN
	TEXT.OPEN W, F, "MIDDLEHS.FB"
	TEXT.WRITELN F, 0
	TEXT.CLOSE F
END IF
FILE.EXISTS FILE, "BLOCKHS.FB"
IF FILE=0 THEN
	TEXT.OPEN W, F, "BLOCKHS.FB"
	TEXT.WRITELN F, 0
	TEXT.CLOSE F
END IF
FILE.EXISTS FILE, "PROGRESSHS.FB"
IF FILE=0 THEN
	TEXT.OPEN W, F, "PROGRESSHS.FB"
	TEXT.WRITELN F, 0
	TEXT.CLOSE F
END IF


FN.CHECKMENUTOUCH(MENURECT[])
	GR.BOUNDED.TOUCH MENU1, MENURECT[1,1],MENURECT[1,2],MENURECT[1,3],MENURECT[1,4]
	GR.BOUNDED.TOUCH MENU2, MENURECT[2,1],MENURECT[2,2],MENURECT[2,3],MENURECT[2,4]
	GR.BOUNDED.TOUCH MENU3, MENURECT[3,1],MENURECT[3,2],MENURECT[3,3],MENURECT[3,4]
	GR.BOUNDED.TOUCH MENU4, MENURECT[4,1],MENURECT[4,2],MENURECT[4,3],MENURECT[4,4]
	SELECT=0
	IF MENU1=1 THEN
		SELECT=1
	END IF
	IF MENU2=1 THEN
		SELECT=2
	END IF
	IF MENU3=1 THEN
		SELECT=3
	END IF
	IF MENU4=1 THEN
		SELECT=4
	END IF
	FN.RTN SELECT

FN.END
! --------------------------------------------------------------

GOSUB MAINMENU

END


MAINMENU:
	GOSUB SHOWMAINMENU
	DO
	GOSUB MENUMOVEPLAYER

	S=CHECHMENUTOUCH()

	IF S=1 THEN
		GOSUB HIDEMAINMENU
		GOSUB LEVELMENU
	END IF
	IF S=2 THEN
		PAUSE 1000
		GR.CLOSE
		EXIT
	END IF
	GR.RENDER
	UNTIL 0
RETURN

MENULEVEL:
	GOSUB SHOWLEVELMENU
	GR.HIDE PLAYER
	DO
	S=CHECKMENUTOUCH(MENURECT[])
	IF S<>0 THEN
		GOSUB HIDELEVELMENU
	END IF
	IF S=1 THEN
		SCORE=0
		GOSUB NORMALMODE
	END IF
	IF S=2 THEN
		SCORE=0
		GOSUB MIDDLEMODE
	END IF
	IF S=3 THEN
		SCORE=0
		GOSUB BLOCKMODE	
	END IF
	IF S=4 THEN
		SCORE=0
		GOSUB PROGRESSIVE
	END IF
	UNTIL 0
RETURN

NORMALMODE:
	GR.SHOW PLAYER
	GR.SHOW ENEMY
	GR.SHOW SCORETEXT

	DO
		GOSUB PLAYERMOVE
		GOSUB ENEMYMOVENORMAL
		GR.MODIFY SCORETEXT, "text", "SCORE:"+FORMAT$("#######", SCORE)
		IF GR_COLLISION(PLAYER,ENEMYC) THEN
			PAUSE 1000
			GOTO DIEDNORMAL
		END IF
		PAUSE 5
		GR.RENDER
	UNTIL 0
RETURN

MIDDLEMODE:
	GR.SHOW PLAYER
	GR.SHOW ENEMY
	GR.SHOW ENEMYC
	GR.SHOW SCORETEXT
	GR.MODIFY PLAYER, "y", HALFH
	
	DO
		GOSUB PLAYERMOVE
		GOSUB ENEMYMOVEMIDDLE
		GR.MODIFY SCORETEXT, "text", "SCORE:"+FORMAT$("#######", SCORE)
		IF GR_COLLISION(PLAYER,ENEMYC) THEN
			PAUSE 1000
			GOTO DIEDMIDDLE
		END IF
		PAUSE 5
		GR.RENDER
	UNTIL 0

RETURN

BLOCKMODE:
	GR.SHOW PLAYER
	GR.SHOW ENEMY
	GR.SHOW ENEMYC
	GR.SHOW BLOCK
	GR.SHOW SCORETEXT

	DO
		GOSUB PLAYERMOVE
		GOSUB ENEMYMOVENORMAL
		GOSUB BLOCKMOVE
		GR.MODIFY SCORETEXT, "text", "SCORE:"+FORMAT$("#######", SCORE)
		IF GR_COLLISION(PLAYER,ENEMYC) THEN
			PAUSE 1000
			GR.HIDE BLOCK
			GOTO DIEDNORMAL
		END IF
		IF GR_COLLISION(PLAYER, BLOCK) THEN
			PAUSE 1000
			GR.HIDE BLOCK
			GOTO DIEDBLOCK
		END IF
		PAUSE 5
		GR.RENDER
	UNTIL 0
RETURN

PROGRESSIVE:
	GR.SHOW PLAYER
	GR.SHOW ENEMY
	GR.SHOW ENEMYC
	GR.SHOW SCORETEXT

	DO
		GOSUB PLAYERMOVE
		GOSUB ENEMYMOVEPROGRESS
		GR.MODIFY SCORETEXT, "text", "SCORE:"+FORMAT$("#######", SCORE)
		IF GR_COLLISION(PLAYER,ENEMYC) THEN
			PAUSE 1000
			GOTO DIEDPROGRESS
		END IF
		PAUSE 5
		GR.RENDER
	UNTIL 0
RETURN

DIEDNORMAL:
	GOSUB SCORECHECKN
	GR.MODIFY DIEDMENU[9], "text", "HIGHSCORE:"+FORMAT$("#####", HIGHSCORE)
	GR.MODIFY DIEDMENU[8], "text", "SCORE:"+FORMAT$("#######", SCORE)
	GR.HIDE SCORETEXT
	GOSUB SHOWDIED

	DO
	S=CHECKMENUTOUCH(MENURECT[])
	IF S=1 THEN
		GOSUB RESETGAME
		PAUSE 1000
		GOSUB HIDEDIED
		GOSUB NORMALMODE
	END IF
	IF S=2 THEN
		GOSUB RESETGAME
		GOSUB HIDEDIED
		GOSUB MAINMENU
	END IF
	IF S=3 THEN
		GR.CLOSE
		EXIT
	END IF
	
	UNTIL 0
RETURN

DIEDMIDDLE:
	GOSUB SCORECHECKM
	GR.MODIFY DIEDMENU[9], "text", "HIGHSCORE:"+FORMAT$("#####", HIGHSCORE)
	GR.MODIFY DIEDMENU[8], "text", "SCORE:"+FORMAT$("#######", SCORE)
	GR.HIDE SCORETEXT
	GOSUB SHOWDIED

	DO
	S=CHECKMENUTOUCH(MENURECT[])
	IF S=1 THEN
		GOSUB RESETGAME
		PAUSE 1000
		GOSUB HIDEDIED
		GOSUB MIDDLEMODE
	END IF
	IF S=2 THEN
		GOSUB RESETGAME
		GOSUB HIDEDIED
		GOSUB MAINMENU
	END IF
	IF S=3 THEN
		GR.CLOSE
		EXIT
	END IF
	
	UNTIL 0
RETURN

DIEDBLOCK:
	GOSUB SCORECHECKB
	GR.MODIFY DIEDMENU[9], "text", "HIGHSCORE:"+FORMAT$("#####", HIGHSCORE)
	GR.MODIFY DIEDMENU[8], "text", "SCORE:"+FORMAT$("#######", SCORE)
	GR.HIDE SCORETEXT
	GOSUB SHOWDIED

	DO
	S=CHECKMENUTOUCH(MENURECT[])
	IF S=1 THEN
		GOSUB RESETGAME
		PAUSE 1000
		GOSUB HIDEDIED
		GOSUB BLOCKMODE
	END IF
	IF S=2 THEN
		GOSUB RESETGAME
		GOSUB HIDEDIED
		GOSUB MAINMENU
	END IF
	IF S=3 THEN
		GR.CLOSE
		EXIT
	END IF
	
	UNTIL 0
RETURN

DIEDPROGRESS:
	GOSUB SCORECHECKP
	GR.MODIFY DIEDMENU[9], "text", "HIGHSCORE:"+FORMAT$("#####", HIGHSCORE)
	GR.MODIFY DIEDMENU[8], "text", "SCORE:"+FORMAT$("#######", SCORE)
	GR.HIDE SCORETEXT
	GOSUB SHOWDIED

	DO
	S=CHECKMENUTOUCH(MENURECT[])
	IF S=1 THEN
		GOSUB RESETGAME
		PAUSE 1000
		GOSUB HIDEDIED
		GOSUB PROGRESSIVE
	END IF
	IF S=2 THEN
		GOSUB RESETGAME
		GOSUB HIDEDIED
		GOSUB MAINMENU
	END IF
	IF S=3 THEN
		GR.CLOSE
		EXIT
	END IF
	
	UNTIL 0
RETURN

RESETGAME:
PLAYERX=HALFW
PLAYERY=H-EIGHTH
ENEMYX[1]=QUARTERW
ENEMYX[2]=HALFW+QUARTERW
ENEMYY=H+1
BLOCKX=EIGHTW
BLOCKY=0
D=0
SCORE=0
HIGHSCORE=0
UPDOWN=0

GR.HIDE PLAYER
GR.HIDE ENEMY
GR.MODIFY PLAYER,"y", PLAYERY
GR.MODIFY PLAYER,"x", PLAYERX
GR.MODIFY ENEMY,"x", ENEMYX[1]
GR.MODIFY ENEMY,"y", ENEMYY

RETURN

PLAYERMOVE:
	SENSORS.READ 1,X,Y,Z
	X=X*(HALFH/12)
	SENSORX=HALFW+X
	IF PLAYERX<W THEN
		IF PLATERX>0 THEN
			IF SENSORX<HALFW THEN
			PLAYERX=PLAYERX+PLAYERSPEED
			END IF
			IF SENSORX>HALFW THEN
			PLAYERX=PLAYERX-PLAYERSPEED
			END IF
		END IF
	END IF
	IF PLAYERX>=W THEN
		PLAYERX=PLAYERX-PLAYERSPEED
	END IF
	IF PLAYERX<=0 THEN
		PLAYERX=PLAYERX+PLAYERSPEED
	END IF

	GR.MODIFY PLAYER,"x", PLAYERX
RETURN

ENEMYMOVENORMAL:
	IF ENEMYY>=H THEN
		N=RND()*2
		IF N<1 THEN
			SIDE=0
		END IF
		IF N>1 THEN
			SIDE=1
		END IF
		ENEMYY=-EIGHTH
		SCORE=SCORE+1
	END IF
	ENEMYY=ENEMYY+SPEED[3]
	GR.MODIFY ENEMY, "x", ENEMYX[SIDE]
    GR.MODIFY ENEMYC,"x", ENEMYX[SIDE]
	GR.MODIFY ENEMY,"y", ENEMYY 
	GR.MODIFY ENEMYC,"y", ENEMYY

RETURN

BLOCKMOVE:
IF BLOCKM=0 THEN
	N=RND()*30
	IF N<2 THEN
		BLOCKM=1
	END IF
END IF
IF BLOCKM=1 THEN
	BLOCKY=BLOCKY+BLOCKSPEED
	GR.BOUNDED.TOUCH BLOCKT, BLOCKX, BLOCKY, BLOCKX+QUARTERW*3, BLOCKY+QUARTERH
	IF BLOCKT=1 THEN
		BLOCKY=-HALFH
		BLOCKM=0
	END IF
END IF

GR.MODIFY BLOCK, "y", BLOCKY

RETURN

ENEMYMOVEPROGRESS:
	IF ENEMYY>=H THEN
		N=RND()*2
		IF N<1 THEN
			SIDE=0
		END IF
		IF N>1 THEN
			SIDE=1
		END IF
		ENEMYY=-EIGHTH
		SCORE=SCORE+1
	END IF
	IF SCORE<=15 THEN
		ENEMYY=ENEMYY+SPEED[2]
	END IF
	IF SCORE>15 THEN
	IF SCORE<=30 THEN
		ENEMYY=ENEMYY+SPEED[3]
	END IF
	END IF
	IF SCORE>30 THEN
	IF SCORE<=55 THEN
		ENEMYY=ENEMYY+SPEED[4]
	END IF
	END IF
	IF SCORE>55 THEN
	 ENEMYY=ENEMYY+SPEED[5]
	END IF
	GR.MODIFY ENEMY, "x", ENEMYX[SIDE]
    GR.MODIFY ENEMYC,"x", ENEMYX[SIDE]
	GR.MODIFY ENEMY,"y", ENEMYY 
	GR.MODIFY ENEMYC,"y", ENEMYY

RETURN

ENEMYMOVEMIDDLE:
	IF UPDOWN=0 THEN
		SCORE=SCORE+1
		N1=RND()*2
		IF N1<1 THEN
			ENEMYY=-EIGHTH
		END IF
		IF N1>1 THEN
			ENEMYY=H+HEIGHH
		END IF
		
		N=RND()*2
			IF N<1 THEN
				SIDE=0
			END IF
			IF N>1 THEN
				SIDE=1
			END IF
		UPDOWN=1
	END IF
	
	IF N1<1 THEN
		IF ENEMYY>=H THEN
			UPDOWN=0
		END IF
		ENEMYY=ENEMYY+SPEED[1]
	END IF
	IF N1<1 THEN
		IF ENEMYY<=0 THEN
			UPDOWN=0
		END IF
		ENEMYY=ENEMYY-SPEED[1]
	END IF
	
	GR.MODIFY ENEMY, "x", ENEMYX[SIDE]
    GR.MODIFY ENEMYC,"x", ENEMYX[SIDE]
	GR.MODIFY ENEMY,"y", ENEMYY 
	GR.MODIFY ENEMYC,"y", ENEMYY

RETURN

SHOWDIED:
	FOR I=1 TO 9
		GR.SHOW DIEDMENU[I]
	NEXT I
	GR.RENDER
RETURN

HIDEDIED:
	FOR I=1 TO 9
		GR.HIDEMENU[I]
	NEXT I
	GR.RENDER
RETURN

SCORECHECKN:
TEXT.OPEN R, FILE, "NORMALHS.FB"
TEXT.READLN FILE, SCORE$
TEXT.CLOSE FILE
HIGHSCORE=VAL(SCORE$)
IF SCORE>HIGHSCORE THEN
	TEXT.OPEN W, FILE, "NORMALHS.FB"
	TEXT.WRITELN FILE, SCORE
	TEXT.CLOSE FILE
	HIGHSCORE=SCORE
END IF
RETURN

SCORECHECKM:
TEXT.OPEN R, FILE, "MIDDLEHS.FB"
TEXT.READLN FILE, SCORE$
TEXT.CLOSE FILE
HIGHSCORE=VAL(SCORE$)
IF SCORE>HIGHSCORE THEN
	TEXT.OPEN W, FILE, "MIDDLEHS.FB"
	TEXT.WRITELN FILE, SCORE
	TEXT.CLOSE FILE
	HIGHSCORE=SCORE
END IF
RETURN

SCORECHECKB:
TEXT.OPEN R, FILE, "BLOCKHS.FB"
TEXT.READLN FILE, SCORE$
TEXT.CLOSE FILE
HIGHSCORE=VAL(SCORE$)
IF SCORE>HIGHSCORE THEN
	TEXT.OPEN W, FILE, "BLOCKHS.FB"
	TEXT.WRITELN FILE, SCORE
	TEXT.CLOSE FILE
	HIGHSCORE=SCORE
END IF
RETURN

SCORECHECKP:
TEXT.OPEN R, FILE, "PROGRESSHS.FB"
TEXT.READLN FILE, SCORE$
TEXT.CLOSE FILE
HIGHSCORE=VAL(SCORE$)
IF SCORE>HIGHSCORE THEN
	TEXT.OPEN W, FILE, "PROGRESSHS.FB"
	TEXT.WRITELN FILE, SCORE
	TEXT.CLOSE FILE
	HIGHSCORE=SCORE
END IF
RETURN


SHOWMAINMENU:
	FOR I=1 TO 4
		GR.SHOW MAINMENU[I]
	NEXT I
	GR.SHOW PLAYER
	GR.RENDER
RETURN
HIDEMAINMENU:
	FOR I=1 TO 4
		GR.HIDE MAINMENU[I]
	NEXT I
	GR.RENDER
RETURN

SHOWLEVELMENU:
	FOR I=1 TO 8
		GR.SHOW LEVELMENU[I]
	NEXT I
	GR.RENDER
RETURN
HIDELEVELMENU:
	FOR I=1 TO 8
		GR.HIDE LEVELMENU[I]
	NEXT I
	GR.RENDER
RETURN

MENUMOVEPLAYER:
	IF D=0 THEN
		PLAYERX=PLAYERX+EIGHTW/4
		IF PLAYERX>W THEN
			D=1
			PLAYERX=PLAYERX-EIGHTW/4
		END IF
	END IF
	IF D=1 THEN
		PLAYERX=PLAYERX-EIGHTW/4
		IF PLAYERX<0 THEN
			D=0
			PLAYERX=PLAYERX+EIGHTW/4
		END IF
	END IF

	GR.MODIFY PLAYER,"x", PLAYERX

RETURN


